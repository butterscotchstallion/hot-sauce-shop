// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CartItemsColumns holds the columns for the "cart_items" table.
	CartItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "quantity", Type: field.TypeInt8, Default: 1},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// CartItemsTable holds the schema information for the "cart_items" table.
	CartItemsTable = &schema.Table{
		Name:       "cart_items",
		Columns:    CartItemsColumns,
		PrimaryKey: []*schema.Column{CartItemsColumns[0]},
	}
	// InventoriesColumns holds the columns for the "inventories" table.
	InventoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "short_description", Type: field.TypeString},
		{Name: "slug", Type: field.TypeString},
		{Name: "price", Type: field.TypeFloat32},
		{Name: "spice_rating", Type: field.TypeInt, Default: 3},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// InventoriesTable holds the schema information for the "inventories" table.
	InventoriesTable = &schema.Table{
		Name:       "inventories",
		Columns:    InventoriesColumns,
		PrimaryKey: []*schema.Column{InventoriesColumns[0]},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "slug", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "avatar_filename", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "cart_items_user", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_cart_items_user",
				Columns:    []*schema.Column{UsersColumns[6]},
				RefColumns: []*schema.Column{CartItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CartItemsInventoryColumns holds the columns for the "cart_items_inventory" table.
	CartItemsInventoryColumns = []*schema.Column{
		{Name: "cart_items_id", Type: field.TypeInt},
		{Name: "inventory_id", Type: field.TypeInt},
	}
	// CartItemsInventoryTable holds the schema information for the "cart_items_inventory" table.
	CartItemsInventoryTable = &schema.Table{
		Name:       "cart_items_inventory",
		Columns:    CartItemsInventoryColumns,
		PrimaryKey: []*schema.Column{CartItemsInventoryColumns[0], CartItemsInventoryColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cart_items_inventory_cart_items_id",
				Columns:    []*schema.Column{CartItemsInventoryColumns[0]},
				RefColumns: []*schema.Column{CartItemsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "cart_items_inventory_inventory_id",
				Columns:    []*schema.Column{CartItemsInventoryColumns[1]},
				RefColumns: []*schema.Column{InventoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// InventoryTagsColumns holds the columns for the "inventory_tags" table.
	InventoryTagsColumns = []*schema.Column{
		{Name: "inventory_id", Type: field.TypeInt},
		{Name: "tag_id", Type: field.TypeInt},
	}
	// InventoryTagsTable holds the schema information for the "inventory_tags" table.
	InventoryTagsTable = &schema.Table{
		Name:       "inventory_tags",
		Columns:    InventoryTagsColumns,
		PrimaryKey: []*schema.Column{InventoryTagsColumns[0], InventoryTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "inventory_tags_inventory_id",
				Columns:    []*schema.Column{InventoryTagsColumns[0]},
				RefColumns: []*schema.Column{InventoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "inventory_tags_tag_id",
				Columns:    []*schema.Column{InventoryTagsColumns[1]},
				RefColumns: []*schema.Column{TagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserCartItemsColumns holds the columns for the "user_cartItems" table.
	UserCartItemsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "cartItem_id", Type: field.TypeInt},
	}
	// UserCartItemsTable holds the schema information for the "user_cartItems" table.
	UserCartItemsTable = &schema.Table{
		Name:       "user_cartItems",
		Columns:    UserCartItemsColumns,
		PrimaryKey: []*schema.Column{UserCartItemsColumns[0], UserCartItemsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_cartItems_user_id",
				Columns:    []*schema.Column{UserCartItemsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_cartItems_cartItem_id",
				Columns:    []*schema.Column{UserCartItemsColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CartItemsTable,
		InventoriesTable,
		TagsTable,
		UsersTable,
		CartItemsInventoryTable,
		InventoryTagsTable,
		UserCartItemsTable,
	}
)

func init() {
	UsersTable.ForeignKeys[0].RefTable = CartItemsTable
	CartItemsInventoryTable.ForeignKeys[0].RefTable = CartItemsTable
	CartItemsInventoryTable.ForeignKeys[1].RefTable = InventoriesTable
	InventoryTagsTable.ForeignKeys[0].RefTable = InventoriesTable
	InventoryTagsTable.ForeignKeys[1].RefTable = TagsTable
	UserCartItemsTable.ForeignKeys[0].RefTable = UsersTable
	UserCartItemsTable.ForeignKeys[1].RefTable = UsersTable
}
