// Code generated by ent, DO NOT EDIT.

package ent

import (
	"hotsauceshop/ent/inventory"
	"hotsauceshop/ent/schema"
	"hotsauceshop/ent/tag"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	inventoryFields := schema.Inventory{}.Fields()
	_ = inventoryFields
	// inventoryDescCreatedAt is the schema descriptor for createdAt field.
	inventoryDescCreatedAt := inventoryFields[5].Descriptor()
	// inventory.DefaultCreatedAt holds the default value on creation for the createdAt field.
	inventory.DefaultCreatedAt = inventoryDescCreatedAt.Default.(func() time.Time)
	// inventoryDescUpdatedAt is the schema descriptor for updatedAt field.
	inventoryDescUpdatedAt := inventoryFields[6].Descriptor()
	// inventory.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	inventory.DefaultUpdatedAt = inventoryDescUpdatedAt.Default.(func() time.Time)
	// inventory.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	inventory.UpdateDefaultUpdatedAt = inventoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	tagFields := schema.Tag{}.Fields()
	_ = tagFields
	// tagDescCreatedAt is the schema descriptor for createdAt field.
	tagDescCreatedAt := tagFields[3].Descriptor()
	// tag.DefaultCreatedAt holds the default value on creation for the createdAt field.
	tag.DefaultCreatedAt = tagDescCreatedAt.Default.(func() time.Time)
	// tagDescUpdatedAt is the schema descriptor for updatedAt field.
	tagDescUpdatedAt := tagFields[4].Descriptor()
	// tag.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	tag.DefaultUpdatedAt = tagDescUpdatedAt.Default.(func() time.Time)
	// tag.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	tag.UpdateDefaultUpdatedAt = tagDescUpdatedAt.UpdateDefault.(func() time.Time)
}
